/*! (c) Andrea Giammarchi - ISC */
var saferCrypto=function(e){"use strict";var t=Function.call,r=t.bind(t.bind),o=r(t,t.apply);t=r(t,t);const{defineProperty:n,getPrototypeOf:c,getOwnPropertyDescriptor:s,getOwnPropertyNames:a,getOwnPropertySymbols:l,hasOwnProperty:p}=Object,{concat:u,forEach:y,includes:i,push:f}=[],b=(e,t)=>{n(e,t,{enumerable:!0,value:!1})};var P=e=>{const r=e,o=[],P=[];do{t(y,t(u,a(e),l(e)),r=>{t(i,o,r)||(t(f,o,r),t(f,P,s(e,r)))})}while(e=c(e));return t(y,o,(e,o)=>{n(r,e,(e=>(b(e,"configurable"),t(p,e,"writable")&&b(e,"writable"),e))(P[o]))}),r};const{freeze:O,setPrototypeOf:m}=Object,{reject:v,resolve:g}=Promise;class w extends Promise{static reject(e){return t(v,w,E(e))}static resolve(e){return t(g,w,E(e))}constructor(e){O(super(e))}}const{prototype:d,reject:h,resolve:j}=w,E=e=>"object"==typeof e&&null!==e&&"then"in e&&!(e instanceof w)?m(e,d):e;(e=>(P(e.prototype),P(e)))(w),O(w),O(d);const{freeze:z,defineProperty:N,getOwnPropertyNames:x,getPrototypeOf:C}=Object,D=(e,t)=>!/^(?:caller|callee|arguments)$/.test(t)&&"function"==typeof e[t]&&"constructor"!==t,{subtle:F}=crypto,S={},$={};return x(C(crypto)).forEach(e=>{D(crypto,e)&&N(S,e,{enumerable:!0,value:r(crypto[e],crypto)})}),x(C(F)).forEach(e=>{if(D(F,e)){const t=F[e];N($,e,{enumerable:!0,value(){return j(o(t,F,arguments))}})}}),z(N(S,"subtle",{enumerable:!0,value:z($)}))}();
