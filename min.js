/*! (c) Andrea Giammarchi - ISC */
var saferCrypto=function(e){"use strict";var t=Function.call,r=t.bind(t.bind),o=r(t,t.apply);t=r(t,t);const{defineProperty:c,getPrototypeOf:n,getOwnPropertyDescriptor:s,getOwnPropertyNames:a,getOwnPropertySymbols:l,hasOwnProperty:p}=Object,u=(e,t)=>{c(e,t,{enumerable:!0,value:!1})};var y=e=>{const r=e,o=[],y=[];do{a(e).concat(l(e)).forEach(t=>{o.includes(t)||(o.push(t),y.push(s(e,t)))})}while(e=n(e));return o.forEach((e,o)=>{c(r,e,(e=>(u(e,"configurable"),t(p,e,"writable")&&u(e,"writable"),e))(y[o]))}),r};const{freeze:i,setPrototypeOf:f}=Object,{reject:b,resolve:P}=Promise;class O extends Promise{static reject(e){return t(b,O,g(e))}static resolve(e){return t(P,O,g(e))}constructor(e){i(super(e))}}const{prototype:m,reject:v,resolve:h}=O,g=e=>"object"==typeof e&&null!==e&&"then"in e&&!(e instanceof O)?f(e,m):e;(e=>(y(e.prototype),y(e)))(O),i(O),i(m);const{freeze:w,defineProperty:d,getOwnPropertyNames:j,getPrototypeOf:E}=Object,z=(e,t)=>!/^(?:caller|callee|arguments)$/.test(t)&&"function"==typeof e[t]&&"constructor"!==t,{subtle:N}=crypto,x={},C={};return j(E(crypto)).forEach(e=>{z(crypto,e)&&d(x,e,{enumerable:!0,value:r(crypto[e],crypto)})}),j(E(N)).forEach(e=>{if(z(N,e)){const t=N[e];d(C,e,{enumerable:!0,value(){return h(o(t,N,arguments))}})}}),w(d(x,"subtle",{enumerable:!0,value:w(C)}))}();
